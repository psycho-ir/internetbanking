<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->
    <!--<beans:bean class="com.samenea.payments.web.controller.PdfTransactionResultController"></beans:bean>-->
    <context:spring-configured/>
    <context:annotation-config/>


    <tx:annotation-driven transaction-manager="transactionManager" mode="aspectj"/>
    <!-- 	<context:load-time-weaver aspectj-weaving="on" /> -->
    <beans:import resource="config.xml"/>
    <beans:bean id="captchaBypassAttemptCounter" class="com.samenea.commons.utils.attempt.RequestAttemptCounter" scope="temporaryRemoteAddress"/>
    <beans:bean id="propertyConfigurer"
                class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="ignoreUnresolvablePlaceholders"
                        value="true"/>
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath*:notification.properties</beans:value>
                <beans:value>classpath*:captcha.properties</beans:value>
                <beans:value>classpath*:application.properties</beans:value>
                <beans:value>classpath*:expires.properties</beans:value>
                <beans:value>classpath*:banking.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean class="com.samenea.payments.web.controller.LoggingHandlerExceptionResolver">
        <beans:property name="order" value="0"/>
    </beans:bean>
    <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="java.lang.Exception">
                    /excption
                </beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="order" value="1"/>
    </beans:bean>
    <beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver"/>
    <!--Some properties are used In payment controllers -->
    <beans:bean id="webPropertyConfigurer"
                class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="ignoreUnresolvablePlaceholders" value="false"/>
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath*:merchant.properties</beans:value>
                <beans:value>classpath*:validator.properties</beans:value>
                <beans:value>classpath*:pdfTransactionResult.properties</beans:value>
                <beans:value>classpath*:template.properties</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Enables the Spring MVC @Controller programming model -->
    <context:component-scan base-package="com.samenea.payments.web"/>
    <context:component-scan base-package="com.samenea.seapay.client.web"/>
    <context:component-scan base-package="com.samenea.appfeature"/>
    <context:component-scan base-package="com.samenea.captcha"/>
    <context:component-scan base-package="com.samenea.commons.utils.attempt"/>
    <!--For ApplicationStartupShutdown notifier-->
    <context:component-scan base-package="com.samenea.notification.utils"/>
    <context:component-scan base-package="com.samenea.notification"/>
    <beans:bean id="hibernateValidatorFactoryBean"
                class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <beans:property name="validationMessageSource" ref="messageSource"></beans:property>
    </beans:bean>

    <beans:bean id="hdivValidator" class="org.hdiv.web.validator.EditableParameterValidator"/>

    <beans:bean id="v" class="com.samenea.payments.web.model.ValidatorWrapper">
        <beans:property name="validators">
            <beans:list>
                <beans:ref bean="hdivValidator"/>
                <beans:ref bean="hibernateValidatorFactoryBean"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    <annotation-driven validator="v"/>


    <resources location="/resources/, classpath:/META-INF/web-resources/"
               mapping="/resources/**"/>

    <interceptors>
        <beans:bean
                class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="lang">
            </beans:property>
        </beans:bean>
        <beans:bean class="com.samenea.appfeature.FeatureSecurityInterceptor"/>
    </interceptors>

    <beans:bean
            class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
            id="messageSource">
        <beans:property name="fallbackToSystemLocale" value="true"/>
        <beans:property name="basenames" value="resources/i18n/application"></beans:property>
    </beans:bean>
    <beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
                id="localeResolver">
        <!-- <beans:property name="cookieName" value="locale" ></beans:property> -->
        <beans:property name="defaultLocale" value="fa_IR"></beans:property>
    </beans:bean>


    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
                id="tilesViewResolver">
        <beans:property name="viewClass"
                        value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </beans:bean>
    <beans:bean
            class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
            id="tilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/views/common/layout.xml</beans:value>
                <!-- Scan views directory for Tiles configurations -->
                <beans:value>/WEB-INF/views/**/views.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <beans:property name="location">
            <beans:value>/WEB-INF/spring-pdf-views.xml</beans:value>
        </beans:property>
        <beans:property name="order" value="0"/>
    </beans:bean>

</beans:beans>
